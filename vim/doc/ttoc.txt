*ttoc.txt*  ttoc - A regexp-based ToC of the current buffer
            Author: Tom Link, micathom at gmail com


This plugin tries to duplicate the functionality of Marc Weber's 
outline.vim (vimscript #1947) on the basis of its description and of 
vim's own |:g|. Other than outline.vim, it relies on tlib (vimscript 
#1863).

The TToC command can be used to get a quick table of contents of the 
buffer based on a given regular expression. The regexp can be defined on 
the command line, in window (w:ttoc_rx), buffer-local (b:ttoc_rx) 
variables or in global filetype-specific (g:ttoc_rx_{&filetype}) 
variables. The order actually is: [wbg]:ttoc_rx_{&filetype} > 
[wbg]:ttoc_rx.

In the list view, you can select a line and either preview it (<c-p>), 
jump there (<), close the list and jump there (<cr>).

Example: >

  " Use the default settings for the current file-type
  :TToC
  " Show all words beginning at column 1
  :TToC ^\w
  " Show 'if' statements (but not the concluding 'then' statement)
  :TToC ^\s*if\>.\{-}\ze\s\+then
  " Show 'if' statements and 3 extra lines
  :3TToC! \<if\>

The TToC with a bang works somewhat like |:g| only that you can 
browse/filter the list and select an item after reviewing the results. 
Try it out and compare (with the help file as current buffer): >

  :TToC! TToC

with >

  :g/TToC



-----------------------------------------------------------------------
Install~

Edit the vba file and type: >

    :so %

See :help vimball for details. If you have difficulties, please make 
sure, you have the current version of vimball (vimscript #1502) 
installed.

This script requires tlib (vimscript #1863) to be installed.

Suggested maps (to be set in ~/.vimrc): >
    noremap <m-c>       :TToC<cr>
    inoremap <m-c>       <c-o>:TToC<cr>

and (in case <m-t> is set to open some menu):
    noremap  <Leader>cc       :TToC<cr>
    inoremap <Leader>cc       <c-o>:TToC<cr>
    noremap  <Leader>c<space> :TToC!
    inoremap <Leader>c<space> <c-o>:TToC!

The following gives you a |[I| or |]I| like experience but with a IMHO more 
convenient UI:

    noremap  <Leader>c#       :TToC! <c-r><c-w><cr>
    inoremap <Leader>c#       <c-o>:TToC! <c-r><c-w><cr>

Or open the search in a "background" window:

    noremap  <Leader>cb       :Ttocbg! <c-r><c-w><cr>
    inoremap <Leader>cb       <c-o>:Ttocbg! <c-r><c-w><cr>

Key maps in the list view:
    <c-p>   ... preview selected item
    <cr>    ... close the TOC and jump to the selected item
    <space> ... jump to the selected item but don't close the TOC
    <esc>   ... close the TOC, jump back to the original position


========================================================================
Contents~

        g:ttoc_markers ......... |g:ttoc_markers|
        g:ttoc_rx .............. |g:ttoc_rx|
        g:ttoc_rx_bib .......... |g:ttoc_rx_bib|
        g:ttoc_rx_c ............ |g:ttoc_rx_c|
        g:ttoc_rx_cpp .......... |g:ttoc_rx_cpp|
        g:ttoc_rx_html ......... |g:ttoc_rx_html|
        g:ttoc_rx_java ......... |g:ttoc_rx_java|
        g:ttoc_rx_javascript ... |g:ttoc_rx_javascript|
        g:ttoc_rx_perl ......... |g:ttoc_rx_perl|
        g:ttoc_rx_php .......... |g:ttoc_rx_php|
        g:ttoc_rx_python ....... |g:ttoc_rx_python|
        g:ttoc_rx_rd ........... |g:ttoc_rx_rd|
        g:ttoc_rx_ruby ......... |g:ttoc_rx_ruby|
        g:ttoc_rx_scheme ....... |g:ttoc_rx_scheme|
        g:ttoc_rx_sh ........... |g:ttoc_rx_sh|
        g:ttoc_rx_tcl .......... |g:ttoc_rx_tcl|
        g:ttoc_rx_tex .......... |g:ttoc_rx_tex|
        g:ttoc_rx_viki ......... |g:ttoc_rx_viki|
        g:ttoc_rx_vim .......... |g:ttoc_rx_vim|
        g:ttoc_world ........... |g:ttoc_world|
        g:ttoc_vertical ........ |g:ttoc_vertical|
        g:ttoc_win_size ........ |g:ttoc_win_size|
        TToC_GetLine_viki ...... |TToC_GetLine_viki()|
        TToC_GetLine_bib ....... |TToC_GetLine_bib()|
        :TToC .................. |:TToC|
        :Ttoc .................. |:Ttoc|
        :Ttocbg ................ |:Ttocbg|


========================================================================
plugin/ttoc.vim~

                                                    *g:ttoc_markers*
g:ttoc_markers                 (default: 1)
    Markers as used by vim and other editors. Can be also buffer-local. 
    This rx is added to the filetype-specific rx.
    Values:
      0      ... disable
      1      ... use &foldmarker
      2      ... use &foldmarker only if &foldmethod == marker
      string ... use as rx

                                                    *g:ttoc_rx*
g:ttoc_rx                      (default: '^\w.*')
    By default, assume that everything at the first column is important.


Some filetype-specific regexps. If you don't like the default values, 
set these variables in ~/.vimrc.

                                                    *g:ttoc_rx_bib*
g:ttoc_rx_bib                  (default: '^@\w\+\s*{\s*\zs\S\{-}\ze\s*,')

                                                    *g:ttoc_rx_c*
g:ttoc_rx_c                    (default: '^[[:alnum:]#].*')

                                                    *g:ttoc_rx_cpp*
g:ttoc_rx_cpp                  (default: g:ttoc_rx_c)

                                                    *g:ttoc_rx_html*
g:ttoc_rx_html                 (default: '\(<h\d.\{-}</h\d>\|<\(html\|head\|body\|div\|script\|a\s\+name=\).\{-}>\|<.\{-}\<id=.\{-}>\)')

                                                    *g:ttoc_rx_java*
g:ttoc_rx_java                 (default: '^\s*\(\(package\|import\|private\|public\|protected\|void\|int\|boolean\)\s\+\|\u\).*')

                                                    *g:ttoc_rx_javascript*
g:ttoc_rx_javascript           (default: '^\(var\s\+.\{-}\|\s*\w\+\s*:\s*\S.\{-}[,{]\)\s*$')

                                                    *g:ttoc_rx_perl*
g:ttoc_rx_perl                 (default: '^\([$%@]\|\s*\(use\|sub\)\>\).*')

                                                    *g:ttoc_rx_php*
g:ttoc_rx_php                  (default: '^\(\w\|\s*\(class\|function\|var\|require\w*\|include\w*\)\>\).*')

                                                    *g:ttoc_rx_python*
g:ttoc_rx_python               (default: '^\s*\(import\|class\|def\)\>.*')

                                                    *g:ttoc_rx_rd*
g:ttoc_rx_rd                   (default: '^\(=\+\|:\w\+:\).*')

                                                    *g:ttoc_rx_ruby*
g:ttoc_rx_ruby                 (default: '\C^\(if\>\|\s*\(class\|module\|def\|require\|private\|public\|protected\|module_functon\|alias\|attr\(_reader\|_writer\|_accessor\)\?\)\>\|\s*[[:upper:]_]\+\s*=\).*')

                                                    *g:ttoc_rx_scheme*
g:ttoc_rx_scheme               (default: '^\s*(define.*')

                                                    *g:ttoc_rx_sh*
g:ttoc_rx_sh                   (default: '^\s*\(\(export\|function\|while\|case\|if\)\>\|\w\+\s*()\s*{\).*')

                                                    *g:ttoc_rx_tcl*
g:ttoc_rx_tcl                  (default: '^\s*\(source\|proc\)\>.*')

                                                    *g:ttoc_rx_tex*
g:ttoc_rx_tex                  (default: '\C\\\(label\|\(sub\)*\(section\|paragraph\|part\)\)\>.*')

                                                    *g:ttoc_rx_viki*
g:ttoc_rx_viki                 (default: '^\(\*\+\|\s*#\l\).*')

                                                    *g:ttoc_rx_vim*
g:ttoc_rx_vim                  (default: '\C^\(fu\%[nction]\|com\%[mand]\|if\|wh\%[ile]\)\>.*')

                                                    *g:ttoc_world*
g:ttoc_world
    ttoc-specific |tlib#input#ListD| configuration.
    Customizations should be done in ~/.vimrc/after/plugin/ttoc.vim
    E.g. in order to split horizontally, use: >
        let g:ttoc_world.scratch_vertical = 0
<

                                                    *g:ttoc_vertical*
g:ttoc_vertical                (default: '&lines < &co')
    If true, split vertical.

                                                    *g:ttoc_win_size*
g:ttoc_win_size                (default: '((&lines > &co) ? &lines : &co) / 2')
    Vim code that evaluates to the desired window width/heigth.

                                                    *TToC_GetLine_viki()*
TToC_GetLine_viki(lnum, acc)

                                                    *TToC_GetLine_bib()*
TToC_GetLine_bib(lnum, acc)

                                                    *:TToC*
:[COUNT]TToC[!] [REGEXP]
    EXAMPLES: >
      TToC                   ... use standard settings
      TToC foo.\{-}\ze \+bar ... show this rx (don't include 'bar')
      TToC! foo.\{-}bar      ... show lines matching this rx 
      3TToC! foo.\{-}bar     ... show lines matching this rx + 3 extra lines
<

                                                    *:Ttoc*
:Ttoc
    Synonym for |:TToC|.

                                                    *:Ttocbg*
:Ttocbg
    Like |:TToC| but open the list in "background", i.e. the focus stays 
    in the document window.



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
